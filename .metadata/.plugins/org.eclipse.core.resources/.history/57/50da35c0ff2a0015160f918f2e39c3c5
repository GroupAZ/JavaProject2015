package GestioneNoleggio;

import java.util.ArrayList;

public class ParcoMezzi {

	private ArrayList<Mezzo> parcoMezzi;
	
	public ParcoMezzi(){
		parcoMezzi = new ArrayList<>();
	}
	
	/**
	 * Aggiunta di un mezzo al ParcoMezzi.
	 * @param mezzo
	 */
	public void addMezzo(Mezzo mezzo){
		boolean valido = true;
		if(parcoMezzi.contains(null)){
			valido = false;
			throw new IllegalArgumentException("Non hai inserito niente.");
		}
		for(int i = 0; i < parcoMezzi.size(); i++){
			if(parcoMezzi.get(i).getNumSerie().equals(mezzo.getNumSerie())){
				mezzo.setNumSerie(mezzo.generaNumSerie());
				parcoMezzi.add(mezzo);
				valido = false;
			}
		}
		if(valido){
			parcoMezzi.add(mezzo);
		}
	}
	
	/**
	 * metodo per noleggiare un mezzo. 
	 * @param caricoSollevabile
	 * @param durata
	 * @return
	 */
	public boolean mezzoPrenotabile(int caricoSollevabile, int durata){
		boolean trovato = false;
		for(int i = 0; i < parcoMezzi.size(); i++){
			if((parcoMezzi.get(i).getCaricoMax() >= caricoSollevabile) && (trovato == false)){
				if(parcoMezzi.get(i).getNoleggiato() == false){
					parcoMezzi.get(i).setNoleggiato();
					parcoMezzi.get(i).setDurataNoleggio(durata);
					trovato = true;
				}
			}
		}
		if(trovato == false) trovato = false;
		return trovato;
		
	}
	
	public int concludiNoleggio(String numSerie){
		boolean trovato = false;
		int prezzo = 0;
		for(int i = 0; i < parcoMezzi.size(); i++){
			if(parcoMezzi.get(i).generaNumSerie() == numSerie && parcoMezzi.get(i).getNoleggiato() == true){
				parcoMezzi.get(i).setRiportato();
				prezzo = parcoMezzi.get(i).getDurataNoleggio() * parcoMezzi.get(i).getCostoNoleggio();
				trovato = true;
				return prezzo;
			}
		}
		if(trovato == false) throw new IllegalArgumentException("Mezzo non noleggiato");
		return 0;
	}
	/**
	 * Ricerca di un mezzo nel parco mezzi.
	 * @param numSerie
	 * @return
	 */
	public Mezzo cercaMezzo(String numSerie){
		for(int i = 0; i < parcoMezzi.size(); i++){
			if(parcoMezzi.get(i).generaNumSerie() == numSerie){
				return parcoMezzi.get(i);
			}
		}
		return null;
	}
	
	/**
	 * Elimina un mezzo presente nel ParcoMezzi
	 * @param numSerie
	 */
	public void eliminaMezzo(String numSerie){
		boolean trovato = false;
		for(int i = 0; i < parcoMezzi.size(); i++){
			if(parcoMezzi.get(i).getNumSerie().equals(numSerie)){
				trovato = true;
				parcoMezzi.remove(i);
			}
		}
		if(!trovato){
			throw new IllegalArgumentException("Non è presente quel mezzo");
		}
	}
	
	/**
	 * @return the parcoMezzi
	 */
	public ArrayList<Mezzo> getParcoMezzi() {
		return parcoMezzi;
	}

	public String toString(){
		String elencoMezzi = "";
		for(Mezzo mezzo : parcoMezzi){
			elencoMezzi = elencoMezzi + mezzo.toString() + "\n";
		}
		return elencoMezzi;
	}
	
	
}
